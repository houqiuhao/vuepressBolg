(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{458:function(t,a,s){"use strict";s.r(a);var r=s(15),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"网络安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络安全"}},[t._v("#")]),t._v(" 网络安全")]),t._v(" "),s("p",[t._v("随着网络技术的发展，前端面临的网络安全问题也越来越多，比如xss攻击cors攻击等等，这篇文章浅探一下前端安全问题")]),t._v(" "),s("h2",{attrs:{id:"xss攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击"}},[t._v("#")]),t._v(" xss攻击")]),t._v(" "),s("p",[t._v("XSS攻击也叫做跨站脚本攻击，一般是通过在页面中注入脚本获取用户个人信息或者其他侵犯隐私的行为"),s("br"),t._v("\nXSS攻击按照持续时间分为非持久性攻击（反射型攻击）和持久性攻击（存储型攻击）")]),t._v(" "),s("h3",{attrs:{id:"非持久性攻击-反射型攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非持久性攻击-反射型攻击"}},[t._v("#")]),t._v(" 非持久性攻击（反射型攻击）")]),t._v(" "),s("p",[t._v("非持久性攻击一般是将一些执行代码嵌入 URL 中，用户访问的时候攻击代码会被 HTML 解析并执行"),s("br"),t._v("\n非持久性攻击有以下特点：\n1. 即时性：通过 HTTP 的 post 或者 get 请求就可以进行一次攻击，不需要经过服务器\n2. 攻击者需要诱骗用户点击才能执行攻击\n3. 盗取用户隐私信息\n4. 反馈率低，较难发现和修复")]),t._v(" "),s("blockquote",[s("p",[t._v("大多数浏览器都会提供 xss 过滤器，可以防控大多数 xss 攻击")])]),t._v(" "),s("h3",{attrs:{id:"持久性攻击-存储性攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久性攻击-存储性攻击"}},[t._v("#")]),t._v(" 持久性攻击（存储性攻击）")]),t._v(" "),s("p",[t._v("持久性攻击一般存在于 From 表单等交互功能，如留言、提交文本信息等。攻击者将攻击代码提交到服务端，用户在使用请求回来的数据时，注入的代码就会被执行。"),s("br"),t._v("\n当然持久性攻击要成功需要满足以下条件：\n1. 提交的信息服务端没有做转义就直接放入数据库中\n2. 服务端从数据库中取出的数据没有做转义就直接下发给客户端\n3. 客户端拿到服务端返回的数据没做转义直接渲染 DOM")]),t._v(" "),s("h3",{attrs:{id:"防范措施"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防范措施"}},[t._v("#")]),t._v(" 防范措施")]),t._v(" "),s("p",[t._v("防范措施有以下几种")]),t._v(" "),s("h4",{attrs:{id:"_1、csp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、csp"}},[t._v("#")]),t._v(" 1、CSP")]),t._v(" "),s("p",[t._v("CSP 就是建立白名单（当然黑名单也可以），告诉浏览器哪些外部资源可以加载\n开启 CSP 有两种方式：\n1. 设置 HTTP Header 中的 Content-Security-Policy\n2. 设置 meta 标签")]),t._v(" "),s("h4",{attrs:{id:"_2、转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、转义字符"}},[t._v("#")]),t._v(" 2、转义字符")]),t._v(" "),s("p",[t._v("将引号、尖括号、斜杠等进行转义")]),t._v(" "),s("h4",{attrs:{id:"_3、httponly-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、httponly-cookie"}},[t._v("#")]),t._v(" 3、HttpOnly cookie")]),t._v(" "),s("p",[t._v("将 cookie 设置为 HttpOnly，只允许服务端进行修改，不能通过脚本形式修改，可以有效的防止 cookie 窃取")]),t._v(" "),s("h2",{attrs:{id:"csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),s("p",[t._v("CSRF（Cross Site Request Forgery），跨站请求伪造。"),s("br"),t._v("\n一般诱导用户进入第三方网站，利用用户已经获取到的注册凭证，绕过后台用户检测，伪造用户进行操作"),s("br"),t._v(" "),s("strong",[t._v("攻击步骤如下：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("受害者登录a.com，并保留了登录凭证（Cookie）。\n攻击者引诱受害者访问了b.com。\nb.com 向 a.com 发送了一个请求：a.com/act=xx。浏览器会…\na.com接收到请求后，对请求进行验证，并确认是受害者的凭证，误以为是受害者自己发送的请求。\na.com以受害者的名义执行了act=xx。\n攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让a.com执行了自己定义的操作。\n")])])]),s("p",[s("strong",[t._v("CSRF的特点")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("攻击一般发起在第三方网站，而不是被攻击的网站。被攻击的网站无法防止攻击发生。\n攻击利用受害者在被攻击网站的登录凭证，冒充受害者提交操作；而不是直接窃取数据。\n整个过程攻击者并不能获取到受害者的登录凭证，仅仅是“冒用”。\n跨站请求可以用各种方式：图片URL、超链接、CORS、Form提交等等。部分请求方式可以直接嵌入在第三方论坛、文章中，难以进行追踪。\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);